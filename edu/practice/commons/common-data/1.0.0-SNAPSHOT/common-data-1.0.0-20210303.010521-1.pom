<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.practice.commons</groupId>
  <artifactId>common-data</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0-SNAPSHOT</version>
  <name>Maven Quick Start Archetype</name>
<!--  <url>http://maven.apache.org</url>-->
  <url>https://github.com/meghadureja/common-data</url>

  <properties>
    <!-- github server corresponds to entry in ~/.m2/settings.xml -->
    <github.global.server>github</github.global.server>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>


  <distributionManagement>
    <!--    <repository>-->
    <!--      <id>internal.repo</id>-->
    <!--      <name>Temporary Staging Repository</name>-->
    <!--      <url>file://${project.build.directory}/mvn-repo</url>-->
    <!--    </repository>-->
    <!--    <snapshotRepository>-->
    <!--      <id>internal.repo</id>-->
    <!--      <name>HS18 Internal Repository</name>-->
    <!--      <url>http://hg.hs18.lan:8081/nexus/content/repositories/snapshots/</url>-->
    <!--    </snapshotRepository>-->
    <repository>
      <id>internal.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.directory}/mvn-repo</url>
    </repository>
  </distributionManagement>

  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.10</version>
      <scope>provided</scope>
    </dependency>

    <!-- Note that I specified a provided scope here, which means that your dependency is available at compile- and test-time,
    but will not be packaged into your artifacts.
    This is usually needed if you want to deploy your artifacts in an application server,
    since they provide their own implementation of the api. -->
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>javax.persistence-api</artifactId>
      <version>2.2</version>
      <scope>provided</scope>
    </dependency>

    <!--    Bean Validation API -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>2.0.1.Final</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.12.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>5.4.12.Final</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
<!--    <pluginManagement>-->
      <plugins>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
          <configuration>
            <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo
            </altDeploymentRepository>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>0.12</version>
          <configuration>
            <message>Creating Maven artifacts for ${project.version}</message>  <!-- git commit message -->
            <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
            <outputDirectory>${project.build.directory}/mvn-repo
            </outputDirectory> <!-- matches distribution management repository url above -->
            <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
            <includes>
              <include>**/*</include>
            </includes>
            <repositoryName>common-data</repositoryName>      <!-- github repo name -->
            <repositoryOwner>meghadureja</repositoryOwner>    <!-- github username  -->
            <server>github</server>
          </configuration>
          <executions>
            <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
            <execution>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>deploy</phase>
            </execution>
          </executions>
        </plugin>

      </plugins>
<!--    </pluginManagement>-->

<!--    <plugins>-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-compiler-plugin</artifactId>-->
<!--        <configuration>-->
<!--          <source>8</source>-->
<!--          <target>8</target>-->
<!--        </configuration>-->
<!--      </plugin>-->
<!--    </plugins>-->
  </build>

</project>
